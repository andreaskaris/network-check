apiVersion: v1
kind: Service
metadata:
  name: network-check
spec:
  selector:
    k8s-app: network-check
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: network-check
  namespace: network-check
  labels:
    k8s-app: network-check
spec:
  selector:
    matchLabels:
      k8s-app: network-check
  template:
    metadata:
      labels:
        k8s-app: network-check
    spec:
      terminationGracePeriodSeconds: 1
      serviceAccountName: network-check
      securityContext:
        runAsUser: 0
      containers:
      - name: network-check
        image: quay.io/akaris/kubectl
        command:
        - /bin/bash
        - "-c"
        - |
          web_server() {
              python3 -m http.server 8080 >/dev/null 2>&1
          }
          ping_destination() {
              local pod_name
              local pod_ip
              pod_name=$1
              pod_ip=$2
              ping -c1 -W1 $pod_ip >/dev/null 2>&1
              if [ $? -eq 0 ]; then
                  echo "$(date): Ping to $pod_name ($pod_ip) successful"
              else
                  echo "$(date): Ping to $pod_name ($pod_ip) lost"
              fi
          }
          curl_destination() {
              local destination
              destination=$1
              curl --connect-timeout 1 -k $destination >/dev/null 2>&1
              if [ $? -eq 0 ]; then
                  echo "$(date): Curl to $destination successful"
              else
                  echo "$(date): Curl to $destination lost"
              fi
          }

          sleep 15
          route=$(oc get routes | tail -n+2 | awk '{print "http://" $2}')
          web_server &
          while true; do
              kubectl get pods -o wide | tail -n+2 |  while read line; do
                  pod=$(echo "$line" | awk '{print $1}')
                  ip=$(echo "$line" | awk '{print $(NF-3)}')
                  ping_destination $pod $ip &
              done
              ping_destination google 8.8.8.8 &
              curl_destination https://172.30.0.1:443 &
              curl_destination $route &
              sleep 1
          done
